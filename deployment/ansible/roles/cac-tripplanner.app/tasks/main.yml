---
- name: Install packages
  apt: name={{ item }} state=present
  with_items:
    - binutils
    - gdal-bin
    - libpq-dev
    - libproj-dev
    - python-dev
    - libjpeg-dev

- name: Install pip packages
  pip: name={{ item.name }} version={{ item.version }}
  with_items: cac_python_dependencies

# TODO: peg this to a version, rather than a commit, when released
- name: Install majorkirby
  pip: name="git+https://github.com/azavea/majorkirby@7688e19e61bf9d218c03a2af6d469d0626b86918#egg=majorkirby"
  when: develop

- name: Touch log file if it does not exist
  command: touch {{ app_log }}
           creates={{ app_log }}

- name: Set log file permissions
  file: path={{ app_log }} owner={{ app_username }} group={{ app_username }} mode=0664

- name: Create configuration file directory
  file: path={{ root_conf_dir }}
        owner={{ app_username }}
        group={{ app_username }}
        mode=0750
        state=directory

- name: Create app media directory
  file: path={{ root_media_dir }}
        owner={{ app_username }}
        group={{ app_username }}
        mode=0775
        state=directory

- name: Write secrets file
  template: src=cac_secrets.j2 dest=/etc/cac_secrets
  when: develop or production
  notify: Restart cac-tripplanner-app

- name: Configure Gunicorn settings
  template: src=gunicorn-cac-tripplanner.py.j2 dest={{ root_conf_dir }}/gunicorn.py
  notify: Restart cac-tripplanner-app

- name: Configure service definition
  template: src=upstart-cac-tripplanner-app.conf.j2 dest=/etc/init/cac-tripplanner-app.conf
  notify: Restart cac-tripplanner-app

- name: Run migrations
  django_manage: command=migrate
                 app_path=/opt/app/python/cac_tripplanner
  notify: Restart cac-tripplanner-app
  when: develop or test

- name: Copy nginx config
  template: src=nginx-default.j2 dest=/etc/nginx/sites-available/default
  notify: Restart nginx

- name: Touch cron job log file if it does not exist
  command: touch {{ app_cron_event_feed_log }}
           creates={{ app_cron_event_feed_log }}

- name: Set cron job log file permissions
  file: path={{ app_cron_event_feed_log }} owner={{ app_username }} group={{ app_username }} mode=0664

# TODO: Add logic in production to only run on a single webserver
- name: Add cron job for RSS events feed
  cron: name="Load event feed" minute="45" user="{{ app_username }}" job="{{ app_cron_event_feed }}"

- { include: jslibs.yml }

- { include: dev-test-dependencies.yml, when: develop or test }
