# -*- coding: utf-8 -*-
# Generated by Django 1.11.21 on 2019-07-15 15:07

import glob
import os
import re
from shutil import copytree, rmtree

from django.conf import settings
from django.db import models, migrations


ALPHANUMERIC_ONLY = re.compile('\W+')
EXTRAS_PATH = 'extras'
DEST_DIRECTORY = os.path.join(settings.MEDIA_ROOT, settings.DEFAULT_MEDIA_PATH, EXTRAS_PATH)
SRC_DIRECTORY = os.path.join(settings.DEFAULT_MEDIA_SRC_PATH, EXTRAS_PATH)


def get_image_paths(location_name):
    """ Create image path, use alphanumeric name of the destination as the image filename """
    filename_glob = ALPHANUMERIC_ONLY.sub('', location_name) + '*.jpg'
    extras_path = os.path.join(settings.DEFAULT_MEDIA_PATH, EXTRAS_PATH, filename_glob)
    return glob.glob(extras_path)


def get_sample_destinations():
    return [
        {
            'name': 'Bartram\'s Garden',
        },
        {
            'name': 'John Heinz National Wildlife Refuge',
        },
    ]


def copy_default_images():
    """ Copy images to proper media dir """
    try:
        copytree(SRC_DIRECTORY, DEST_DIRECTORY)
    except OSError as e:
        # file exists error, rmtree is dumb and we can only copy to an empty directory
        if e.errno != 17:
            raise


def add_sample_images(apps, schema_editor):
    """ Add sample images to default destinations, and copy the images to the media dir """

    # Only run in development
    if not settings.DEBUG:
        return

    copy_default_images()

    Destination = apps.get_model('destinations', 'Destination')
    for destination in get_sample_destinations():
        sample_dest = Destination.objects.filter(name=destination['name']).first()
        paths = get_image_paths(destination['name'])
        for path in paths:
            extra = sample_dest.extradestinationpicture_set.create()
            extra.image_raw = path
            extra.save()
            sample_dest.extradestinationpicture_set.add(extra)
        sample_dest.save()


def delete_sample_images(apps, schema_editor):
    """ Delete default destination images and delete default image dir """

    # Only run in development
    if not settings.DEBUG:
        return

    Destination = apps.get_model('destinations', 'Destination')
    for destination in get_sample_destinations():
        try:
            sample_dest = Destination.objects.filter(name=destination['name']).first()
            sample_dest.extradestinationpicture_set.all().delete()
            sample_dest.save()
        except Destination.DoesNotExist:
            pass

    # last delete the images in the media dir
    rmtree(DEST_DIRECTORY, True)


class Migration(migrations.Migration):

    dependencies = [
        ('destinations', '0044_auto_20180531_1339'),
    ]

    operations = [
        migrations.RunPython(add_sample_images, delete_sample_images),
    ]
